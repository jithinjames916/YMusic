
android {
    compileSdkVersion this.rootProject.android.compileSdkVersion
    defaultConfig {
        applicationId this.rootProject.android.applicationId
        minSdkVersion this.rootProject.android.minSdkVersion
        targetSdkVersion this.rootProject.android.targetSdkVersion
        versionCode this.rootProject.android.versionCode
        versionName this.rootProject.android.versionName
        multiDexEnabled this.rootProject.android.mutidex
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

//应用程序第三方依赖
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation this.rootProject.depsLibs.appcompat
    //rxjava
    implementation rootProject.depsLibs.rxjava
    implementation rootProject.depsLibs.rxandroid
    implementation rootProject.depsLibs.eventbus


    implementation project(':lib_common_ui')
    implementation project(':lib_network')
    implementation project(':lib_imageloader')
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}
repositories {
    mavenCentral()

}

//配置阶段执行
//直接task函数创建
task hellotask(group:'yyy',description:'task study'){
    println 'hello task'
    doFirst{
        //执行阶段执行  后执行
        println "task group $group"
    }
}
hellotask.doFirst{
    //执行阶段执行  先执行
    println "task description $description"
}

//通过taskContainer创建task
this.tasks.create(name :"hellotask2"){
    setGroup('yyy')
    setDescription('task study')
    println 'hello task 2'
}

//计算build执行时长
def startTime, endTime

//所有task都配置完毕
this.afterEvaluate{
    Project project ->
        def preBuildTask = project.tasks.getByName('preBuild')
        preBuildTask.doFirst{
            startTime = System.currentTimeMillis()
            println 'the start time is:' + startTime
        }
        def buildTask = project.tasks.getByName('build')
        buildTask.doLast{
            endTime = System.currentTimeMillis()
            println 'the end time is:' + endTime
            println "buil time is:${endTime - startTime}"

        }
}












